---
import ButtonCopyInTabCode from '@components/preact/ButtonCopyInTabCode';


interface Props {
  values: { text: string; value: string; icon?: string }[];
  showCopyBlock?: boolean;
}

const { values, showCopyBlock } = Astro.props;

const getIcon = (iconName: string) => {
  if (iconName === "unocss") return "i-fx-unocss-ico";
  else if (iconName === "ts") return "i-fx-ts-ico";
  else if (iconName === "js") return "i-fx-js-ico";
  else if (iconName === "html") return "i-fx-html-ico";
  else if (iconName === "css") return "i-fx-css-ico";
  else if (iconName === "astro") return "i-fx-astro-ico";
  else if (iconName === "tailwind") return "i-fx-tailwind-ico";
  else if (iconName === "laravel") return "i-fx-laravel-ico";
  else if (iconName === "symfony") return "i-fx-symphony-ico";
};
---

<div
  data-tab-fx-site
  data-fx-tabs
  data-use-indicator
  data-code-block
  data-indicator-class-name="rd-lg bg-zinc1/50 dark-bg-zinc-9/50 b b-zinc6/30 dark-b-zinc5/20 before-absolute before-content-empty before-hpx before-inset-x-4 before-bg-gradient-to-l before-from-transparent before-via-zinc-4 dark-before-via-zinc7 before-to-transparent after-absolute after-bottom-0 after-content-empty after-hpx after-inset-x-4 after-bg-gradient-to-l after-from-transparent after-via-zinc-4 dark-after-via-zinc7"
  class="h98 flex flex-col w-full !b-0 !b-transparent"
>
  <div
    data-tab-list
    class="bg-white dark-bg-zinc950 flex items-center justify-between relative b-y b-zinc2/90 dark-b-zinc8/60
    text-sm text-zinc7 dark-text-zinc3 h12 flex justify-between items-center"
  >
    <div
      data-scrollbar-hidden
      class="flex-1 hfull pl-1.5 flex items-center gap-x3 relative z20 text-zinc7 dark-text-zinc3"
    >
      {
        values.map((triggerValue) => (
          <button
            data-tabs-trigger
            data-target={triggerValue.value}
            aria-label={`Go to tab ${triggerValue.value}`}
            class="flex items-center gap-x2 disabled-cursor-not-allowed disabled-op80 px3.5 py2 data-[state=active]-text-zinc9 dark-data-[state=active]-text-white focus-outline-none"
          >
            {triggerValue.icon && triggerValue.icon !== "" ? (
              <span
                aria-hidden="true"
                class={`flex text-sm ${getIcon(triggerValue.icon)}`}
              />
            ) : null}
            {triggerValue.text}
          </button>
        ))
      }
    </div>
    {showCopyBlock ? <ButtonCopyInTabCode client:load /> : null}
  </div>
  <div
    data-panels-container
    data-tab-code-content
    class="children-b-t-0 overflow-hidden flex-1 hfull children-hfull"
  >
    <slot />
  </div>
</div>
<style is:global>
  [data-tab-code-content] [data-code-component] {
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
  }
</style>