---
interface Props {
  label: string;
  items: {
    text: string;
    href: string;
    icon: string;
    description: string;
    draft: boolean;
    external: boolean;
  }[];
}

const { label, items } = Astro.props;
---

<div class="space-y-6">
  <h2
    class="text-sm md-text-base font-medium text-zinc9 dark-text-white"
    aria-label="Use with UnoCSS"
  >
    {label}
  </h2>
  <ul class="space-y-4">
    {
      items.map((item) => (
        <li>
          <a
            aria-label={`Link to ${item.text}`}
            data-link-mega-drop
            href={item.href}
            class="hover-text-zinc9 dark-hover-text-white flex items-start gap-x3"
          >
            <span
              aria-hidden="true"
              class="flex items-center justify-center size-10 max-hmax min-w10 rd-lg bg-zinc2/70 dark-bg-zinc8/70"
            >
              <span class={`flex ${item.icon}`} />
            </span>
            <div space-y-1>
              <span class="flex-1 flex items-center gap-x1 text-zinc8 dark-text-zinc2">
                {item.text}
                {item.draft ? (
                  <span class="flex text-xs self-end px1.5 rd-full pypx b b-zinc2/70 dark-b-zinc8/7 bg-zinc2/80 dark-bg-zinc8/80 text-zinc8 dark-text-zinc2">
                    soon
                  </span>
                ) : null}
                {item.external ? (
                  <span
                    data-icon-external
                    aria-hidden="true"
                    class="flex text-xs i-carbon-arrow-up-right translate-y-1 -translate-x-2 invisible op0 ease-linear duration-200"
                  />
                ) : null}
              </span>
              <p class="text-xs md-text-sm text-zinc6 dark-text-zinc4">
                {item.description}
              </p>
            </div>
          </a>
        </li>
      ))
    }
  </ul>
</div>
<style>
  [data-link-mega-drop]:hover [data-icon-external] {
    opacity: 1;
    visibility: visible;
    transform: translateX(0) translateY(0);
  }
</style>
